<!DOCTYPE html>
<html>
<head>
  <title>UV Cipher</title>
  <style>
    body {
      padding: 2vh 5vw;
      color: #EEE;
      font-size: 20px;
      font-family: Arial, sans-serif;
      text-shadow: 0 5px 20px rgba(0,0,0,0.8);
      background: #222;
      scroll-behavior:smooth;
    }
    ::-webkit-scrollbar {width: 10px;}
    ::-webkit-scrollbar-track {
      background: #111;
		}
    ::-webkit-scrollbar-thumb {
      background: #666;
      border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb:hover {background:#777;}
    ::-webkit-scrollbar-thumb:active {box-shadow: 0 0 10px white;}
    body {
      padding: 10px 20px;
      color: #EEE;
      font-family: Arial,sans-serif;
      font-size: 20px;
      /*color-scheme: dark;*/
      text-shadow: 0 5px 20px rgba(0,0,0,0.8);
      background: #222;
    }

    input, button, textarea {
      border: black solid 1px;
      border-radius: 2px;
      box-shadow: 0 5px 20px rgba(0,0,0,0.8);
      padding: 5px;
    }
    textarea {
       height: 60vh;
       width: 80vw;
       border: none;
       box-shadow: none;
       border-radius: 0;
       resize: none;
    }
    textarea:focus,input:focus {
    	outline: none;
    }
    .flexhor {
    	display: flex;
    }
    .vd {
    	padding: 0;
    	margin: 0;
    	border-color: white;
    	border-style: dashed;
    }
    /*Being pacificneodark*/
    :root {
      --hover: #4f4f4f;
      --border: 2px;
      --radius: 45px;
      --height: 6px;
    }
    input:focus,select:focus {outline:none;}
    input:active,select:active,input[type="text"]:focus,.button:active {background: linear-gradient(to left top, #292929, #121212);background-color:#222;};
    .button,input,select {font-family: Tahoma, Arial, sans-serif;}
    input:active,select:active,input[type="text"]:focus,.button:active {
      box-shadow: 2px 2px var(--height) rgba(0,0,0,0.7) inset, -2px -2px var(--height) rgba(240,240,240,0.3) inset;
      border-color: rgba(0,0,0,0);
    }
    details,input,select,.button {border: var(--border) #292929 solid;box-shadow: 2px 2px var(--height) rgba(0,0,0,0.7), -2px -2px var(--height) rgba(240,240,240,0.3);}
    input,select {
      transition: box-shadow 500ms ease, border 500ms ease;
      background: linear-gradient(to left top, #121212, #292929);
      background-color: #222;
      color: currentcolor;
      font-size: 13px;
      padding: 10px;
      margin: 2px;
      border-radius: var(--radius);
      min-width:0px;
    }
    input:hover,select:hover,.button:hover {border-color: var(--hover);}
    .smallinput {width:10em}
    .button {
      display: inline-flex;
      flex-direction: row;
      justify-content: center;
      align-content: center;
      align-items: center;
      cursor: pointer;
      background: linear-gradient(to left top, #121212, #292929);
      color: currentColor;
      transition: box-shadow 500ms ease, border 500ms ease;
      font-size: 13px;
      padding: 8px;
      margin: 4px;
      border-radius: var(--radius);
      min-width: 100px;
    }
  </style>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
</head>

<body lang="en">
  <h1>UV Cipher</h1>
  <select id="uv-wrap" title="Wrapping">
    <option value="nw">None</option>
    <option value="bw">Break</option>
    <option value="ww">Word</option>
    <option value="ab">Break All</option>
  </select>
	<div class="flexhor">
  <textarea placeholder="Plaintext" id="uv-plain" style="white-space: nowrap;"></textarea>
  <hr class="vd"></hr>
  <textarea placeholder="Ciphertext" id="uv-cipher" style="white-space: nowrap;"></textarea>
  </div>
	<footer>Copyright 2025 Frost. All rights reserved.</footer>
  <script>
    const wrapsel = document.getElementById("uv-wrap");
    const plaininp = document.getElementById('uv-plain');
    const cipherinp = document.getElementById('uv-cipher');
    const alph = 'abcdefghijklmnopqrstuvwxyz';
    plaininp.addEventListener('input',()=>{
    	let out = '';
    	/*
    	for(let i=0;i<Math.floor(plaininp.value.length/2);i++){
    		const index = 1+(i*2);
    		const aind = alph.indexOf(plaininp.value[index])+2;
    		//console.log(out[index]);
    		out += plaininp.value[index-1];
    		out += alph[aind > 25 ? aind-26 : aind];
    	}
    			if(aind < -2){
    			if(aind == 1){
    	*/
    	for(let i=0;i<plaininp.value.length;i++){
    		if(i % 2 == 0){
    			out += plaininp.value[i];
    		}else{
    		  const aind = plaininp.value[i].charCodeAt(0)+2;
    		  //console.log(out[index]);
    			out += String.fromCharCode(aind);
    		}
    	}
    	cipherinp.value = out;
    });
    
    cipherinp.addEventListener('input',()=>{
    	let out = '';
    	for(let i=0;i<cipherinp.value.length;i++){
    		if(i%2 == 0){
    			out += cipherinp.value[i];
    		}else{
    		  const aind = cipherinp.value[i].charCodeAt(0)-2;
    		  //console.log(out[index]);
    			out += String.fromCharCode(aind);
    		}
    	}
    	plaininp.value = out;
    });
    
    wrapsel.addEventListener("change",()=>{
    	switch(wrapsel.value){
    		case "ww":
    			plaininp.style="word-wrap:normal;";
    			cipherinp.style="word-wrap:normal;";
    			break;
    		case "bw":
    			plaininp.style="word-wrap:break-word;";
    			cipherinp.style="word-wrap:break-word;";
    			break;
    		case "ab":
    			plaininp.style="word-break: break-all;";
    			cipherinp.style="word-break: break-all;";
    			break;
    		default:
    			cipherinp.style="white-space: nowrap;";
    			plaininp.style="white-space: nowrap;";
    			break;
    	}
    });
  </script>
</body>
</html>
